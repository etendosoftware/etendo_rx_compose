version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - etendorx_net
    stdin_open: true
    tty: true
    restart: unless-stopped
  kafka:
    image: confluentinc/cp-enterprise-kafka:6.1.4
    depends_on: [ zookeeper ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    networks:
      - etendorx_net
    stdin_open: true
    tty: true
    restart: unless-stopped
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports: 
      - 127.0.0.1:9000:9000
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
    networks:
      - etendorx_net
    stdin_open: true
    profiles: ["all"]
    tty: true
    restart: unless-stopped
  debezium:
    image: debezium/connect:1.4
    ports: 
    - 127.0.0.1:8083:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
    depends_on:
      - kafka
    networks:
      - etendorx_net
    stdin_open: true
    tty: true
    restart: unless-stopped
  debezium-ui:
    image: debezium/debezium-ui:latest
    ports: 
      - 127.0.0.1:8095:8080
    environment:
      - KAFKA_CONNECT_URIS=http://debezium:8083
    depends_on:
      - debezium

    networks:
      - etendorx_net
    stdin_open: true
    profiles: ["all"]
    tty: true
    restart: unless-stopped
  config:
    image: etendo/etendorx_config:1.0.0
    networks:
      - etendorx_net
    volumes:
      - ./rxconfig/:/rxconfig
    stdin_open: true
    tty: true
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=/rxconfig
    healthcheck:
      test: wget -O /dev/null 'http://localhost:8888/actuator/health' -q  || exit 1
      interval: 10s
      timeout: 20s
      retries: 10
    restart: unless-stopped
    profiles: ["base", "zapier", "all"]
  das:
    image: etendo/etendorx_das:1.0.0
    networks:
      - etendorx_net
    stdin_open: true
    tty: true
    environment:
      - "CONFIG_SERVER_URL=http://config:8888"
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      config:
        condition: service_healthy
      postgres:
        condition: service_healthy
    profiles: ["base", "zapier","all"]
    healthcheck:
      test: wget -O /dev/null 'http://localhost:8092/actuator/health' -q  || exit 1
      interval: 10s
      timeout: 20s
      retries: 20
    restart: unless-stopped
  auth:
    image: etendo/etendorx_auth:1.0.0
    volumes:
      - ./resources:/resources
    networks:
      - etendorx_net
    stdin_open: true
    tty: true
    environment:
      - "CONFIG_SERVER_URL=http://config:8888"
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      config:
        condition: service_healthy
    profiles: ["base", "zapier", "all"]
    restart: unless-stopped
    healthcheck:
      test: wget -O /dev/null 'http://localhost:8094/actuator/health' -q  || exit 1
      interval: 10s
      timeout: 20s
      retries: 20
  edge:
    image: etendo/etendorx_edge:1.0.0
    volumes:
      - ./resources:/resources
    ports:
      - 8096:8096
    networks:
      - etendorx_net
    stdin_open: true
    tty: true
    environment:
      - "CONFIG_SERVER_URL=http://config:8888"
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      config:
        condition: service_healthy
    profiles: ["base", "zapier", "all"]
    healthcheck:
      test: wget -O /dev/null 'http://localhost:8096/actuator/health' -q  || exit 1
      interval: 10s
      timeout: 20s
      retries: 20
    restart: unless-stopped
  zapier:
    image: etendo/etendorx_integration_zapier:1.0.0
    networks:
      - etendorx_net
    stdin_open: true
    tty: true
    environment:
      - "CONFIG_SERVER_URL=http://config:8888"
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      config:
        condition: service_healthy
    restart: unless-stopped
    profiles: ["zapier", "all"]
    healthcheck:
      test: wget -O /dev/null 'http://localhost:8091/actuator/health' -q  || exit 1
      interval: 10s
      timeout: 20s
      retries: 20
  postgres:
    image: debezium/postgres:13
    ports:
      - 5470:5432
    healthcheck:
      test: "psql -U postgres -v ON_ERROR_STOP=1 -d health -c 'select 1'"
      interval: 10s
      timeout: 20s
      retries: 20
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=syspass
      - POSTGRES_DB=etendo
      - PGPASSWORD=syspass
    volumes:
      - ./postgresql/postgresql-scripts:/docker-entrypoint-initdb.d
    stdin_open: true
    tty: true
    networks:
      - etendorx_net
    restart: unless-stopped
networks:
  etendorx_net:
    name: etendorx_net
